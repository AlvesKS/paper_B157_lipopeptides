{
  "hash": "84616b359cb9d7598af421e6f275fae4",
  "result": {
    "markdown": "---\ntitle: \"Fungal sensibility\"\n---\n\n\n# Pacotes\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.3.6     ✔ purrr   0.3.4\n✔ tibble  3.1.7     ✔ dplyr   1.0.9\n✔ tidyr   1.2.0     ✔ stringr 1.4.0\n✔ readr   2.1.2     ✔ forcats 0.5.1\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nlibrary(drc)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nCarregando pacotes exigidos: MASS\n\nAttaching package: 'MASS'\n\nThe following object is masked from 'package:dplyr':\n\n    select\n\n\n'drc' has been loaded.\n\nPlease cite R and 'drc' if used for a publication,\nfor references type 'citation()' and 'citation('drc')'.\n\n\nAttaching package: 'drc'\n\nThe following objects are masked from 'package:stats':\n\n    gaussian, getInitial\n```\n:::\n\n```{.r .cell-code}\nlibrary(ec50estimator)\nlibrary(cowplot)\nlibrary(ggthemes)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'ggthemes'\n\nThe following object is masked from 'package:cowplot':\n\n    theme_map\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggridges)\nlibrary(gsheet)\nlibrary(patchwork)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'patchwork'\n\nThe following object is masked from 'package:cowplot':\n\n    align_plots\n\nThe following object is masked from 'package:MASS':\n\n    area\n```\n:::\n:::\n\n\n# Carregar dados\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf1 = gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1XGLpSlJZayIVSVxWTsyDJXpO4c65JOeMOyMAW18EVqY/edit?usp=sharing\")\ndf1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 384 × 7\n   trial specie   trat   conc   rep  long trans\n   <dbl> <chr>    <chr> <dbl> <dbl> <dbl> <dbl>\n 1     1 linariae EB     1000     1   0     0  \n 2     1 linariae EB     1000     2   0     0  \n 3     1 linariae EB     1000     3   0     0  \n 4     1 linariae EB     1000     4   0     0  \n 5     1 linariae EB      100     1   9.5   8.6\n 6     1 linariae EB      100     2   8.8   8.6\n 7     1 linariae EB      100     3   9.5   8.9\n 8     1 linariae EB      100     4   9.5   9.6\n 9     1 linariae EB       10     1  20.6  20.3\n10     1 linariae EB       10     2  17.8  15.8\n# … with 374 more rows\n# ℹ Use `print(n = ...)` to see more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf2 = df1 %>% \n  mutate(trans = as.numeric(trans))%>%\nmutate(m_col = (long+trans)/2)%>%\n  filter(specie == \"linariae\", trat == \"EB\")\ndf2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 48 × 8\n   trial specie   trat   conc   rep  long trans m_col\n   <dbl> <chr>    <chr> <dbl> <dbl> <dbl> <dbl> <dbl>\n 1     1 linariae EB     1000     1   0     0    0   \n 2     1 linariae EB     1000     2   0     0    0   \n 3     1 linariae EB     1000     3   0     0    0   \n 4     1 linariae EB     1000     4   0     0    0   \n 5     1 linariae EB      100     1   9.5   8.6  9.05\n 6     1 linariae EB      100     2   8.8   8.6  8.7 \n 7     1 linariae EB      100     3   9.5   8.9  9.2 \n 8     1 linariae EB      100     4   9.5   9.6  9.55\n 9     1 linariae EB       10     1  20.6  20.3 20.5 \n10     1 linariae EB       10     2  17.8  15.8 16.8 \n# … with 38 more rows\n# ℹ Use `print(n = ...)` to see more rows\n```\n:::\n\n```{.r .cell-code}\n # ggplot(aes(as.factor(conc), m_col, fill=trat))+\n#geom_point()\n  #facet_wrap(~specie)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf2 %>% \n  ggplot(aes(as.factor(conc), m_col, fill=trat))+\ngeom_point()\n```\n\n::: {.cell-output-display}\n![](fungal_sensibility_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel = drm(m_col ~ conc, data = df2, fct = W1.4())\nsummary(model)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nModel fitted: Weibull (type 1) (4 parms)\n\nParameter estimates:\n\n                 Estimate  Std. Error t-value   p-value    \nb:(Intercept)    0.211417    0.019163 11.0327 2.956e-14 ***\nc:(Intercept)  -18.297858    9.513826 -1.9233   0.06093 .  \nd:(Intercept)   32.844601    0.653256 50.2783 < 2.2e-16 ***\ne:(Intercept) 1024.950047 1483.456369  0.6909   0.49324    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error:\n\n 1.867967 (44 degrees of freedom)\n```\n:::\n\n```{.r .cell-code}\nplot(model)\n```\n\n::: {.cell-output-display}\n![](fungal_sensibility_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# getmeanfunction()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nED(model, respLev = 50, interval = \"delta\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nEstimated effective doses\n\n       Estimate Std. Error   Lower   Upper\ne:1:50   181.05     238.49 -299.59  661.70\n```\n:::\n\n```{.r .cell-code}\nmselect(model, fctList = list(LL.4(),LL2.4(), LL.3(), LL.3u(), LL.2(), LL.5(), W1.3(), W1.4(), W1.2(), W2.2(), W2.3(), W2.4()))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in sqrt(diag(varMat)): NaNs produzidos\n\nWarning in sqrt(diag(varMat)): NaNs produzidos\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n          logLik       IC  Lack of fit    Res var\nW1.4   -96.01361 202.0272 1.730984e-03   3.489301\nW1.4   -96.01361 202.0272 1.730984e-03   3.489301\nLL.5   -98.43754 208.8751 4.228207e-05   3.949891\nW2.4  -103.32077 216.6415 2.894131e-06   4.731140\nW1.3  -106.80150 221.6030 5.372505e-07   5.348007\nLL.4  -113.54890 237.0978 3.756213e-10   7.245194\nLL.3  -115.93467 239.8693 2.039549e-10   7.824601\nLL2.4 -115.90046 241.8009 4.798843e-11   7.991035\nLL.3u -117.93282 243.8656 3.612377e-11   8.503936\nW2.3  -122.18976 252.3795 8.987265e-13  10.154342\nW1.2  -212.30177 430.6035 2.442922e-46 424.363098\nW2.2  -212.48170 430.9634 2.087143e-46 427.556575\nLL.2  -212.48176 430.9635 2.087036e-46 427.557622\n```\n:::\n:::\n\n\n# Análise para os dois isolados\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf3 = df1 %>% \n  mutate(trans = as.numeric(trans))%>%\n  mutate(m_col1 = (long+trans)/2) %>% \n  filter(trial == \"1\", \n         trat == \"EB\")\n   df3\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 48 × 8\n   trial specie   trat   conc   rep  long trans m_col1\n   <dbl> <chr>    <chr> <dbl> <dbl> <dbl> <dbl>  <dbl>\n 1     1 linariae EB     1000     1   0     0     0   \n 2     1 linariae EB     1000     2   0     0     0   \n 3     1 linariae EB     1000     3   0     0     0   \n 4     1 linariae EB     1000     4   0     0     0   \n 5     1 linariae EB      100     1   9.5   8.6   9.05\n 6     1 linariae EB      100     2   8.8   8.6   8.7 \n 7     1 linariae EB      100     3   9.5   8.9   9.2 \n 8     1 linariae EB      100     4   9.5   9.6   9.55\n 9     1 linariae EB       10     1  20.6  20.3  20.5 \n10     1 linariae EB       10     2  17.8  15.8  16.8 \n# … with 38 more rows\n# ℹ Use `print(n = ...)` to see more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf3 %>% \n  ggplot(aes(as.factor(conc), m_col1, color=specie))+\ngeom_point()\n```\n\n::: {.cell-output-display}\n![](fungal_sensibility_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel2 = drm(m_col1 ~ conc, curveid = specie, data = df3, fct = LL.3())\nsummary(model2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nModel fitted: Log-logistic (ED50 as parameter) with lower limit at 0 (3 parms)\n\nParameter estimates:\n\n           Estimate Std. Error t-value   p-value    \nb:linariae  0.45743    0.07610  6.0110 3.830e-07 ***\nb:grandis   0.77384    0.12030  6.4328 9.468e-08 ***\nd:linariae 31.03859    1.59252 19.4902 < 2.2e-16 ***\nd:grandis  35.08114    1.06988 32.7898 < 2.2e-16 ***\ne:linariae 13.18279    5.86464  2.2478    0.0299 *  \ne:grandis  41.95826    9.45967  4.4355 6.500e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error:\n\n 2.765142 (42 degrees of freedom)\n```\n:::\n\n```{.r .cell-code}\nplot(model2)\n```\n\n::: {.cell-output-display}\n![](fungal_sensibility_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmselect(model2, fctList = list(LL.4(),LL2.4(), LL.3(), LL.3u(), LL.2(), LL.5(), W1.3(), W1.4(), W1.2(), W2.2(), W2.3(), W2.4()))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          logLik       IC  Lack of fit    Res var\nW1.4   -87.56813 193.1363 1.095041e-08   2.699635\nLL.5   -90.76674 203.5335 7.437453e-11   3.246850\nW1.3  -100.20868 214.4174 8.086008e-12   4.353656\nLL2.4  -99.88770 217.7754 1.243136e-12   4.510608\nW2.4  -108.56967 235.1393 1.968533e-15   6.476504\nLL.3  -113.72472 241.4494 3.811914e-16   7.646013\nLL.3  -113.72472 241.4494 3.811914e-16   7.646013\nLL.4  -111.86135 241.7227 1.697255e-16   7.428576\nW2.3  -123.31852 260.6370 3.071422e-19  11.403564\nLL.3u -204.72901 423.4580 1.067415e-45 339.010105\nW2.2  -219.73152 449.4630 9.709340e-50 604.628448\nLL.2  -219.73153 449.4631 9.709244e-50 604.628782\nW1.2  -219.73512 449.4702 9.683117e-50 604.719318\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nED(model2, respLev=50)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nEstimated effective doses\n\n              Estimate Std. Error\ne:grandis:50   41.9583     9.4597\ne:linariae:50  13.1828     5.8646\n```\n:::\n:::\n\n\n# EC50 (Trial 1)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf4 = df1 %>% \n  mutate(trans = as.numeric(trans))%>%\n  mutate(m_col1 = (long+trans)/2) #%>% \n   # filter(trial == \"1\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nec50_out = estimate_EC50(formula = m_col1~conc,\n              data = df4,\n              isolate_col = \"trat\",\n              strata_col = c(\"specie\", \"trial\"),\n              fct = LL2.3() ,\n              interval = \"delta\") %>% \n  mutate(Estimate = round(exp(Estimate),4),\n         Lower = round(exp(Lower),4),\n         Upper = round(exp(Upper),4))\n\nec50_out\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n         ID   specie trial     Estimate Std..Error      Lower        Upper\n1        EB linariae     1      13.1728 0.46994209     4.9573 3.500360e+01\n2        PC linariae     1      25.8127 0.19917376    17.0587 3.905890e+01\n3  SERENADE linariae     1     410.2755 0.13896299   307.3046 5.477496e+02\n4   DACONIL linariae     1 1830182.0856 1.65162760 58993.2554 5.677880e+07\n5        EB  grandis     1      41.9615 0.21189268    27.0070 6.519650e+01\n6        PC  grandis     1      21.8578 0.41386642     9.2431 5.168870e+01\n7  SERENADE  grandis     1     403.0043 0.06611847   351.2318 4.624082e+02\n8   DACONIL  grandis     1     141.0236 0.10643170   113.0229 1.759614e+02\n9        EB linariae     2       5.3862 0.37802872     2.4539 1.182230e+01\n10       PC linariae     2      28.5578 0.32876906    14.4143 5.657930e+01\n11 SERENADE linariae     2     389.9593 0.07880223   331.0152 4.593997e+02\n12  DACONIL linariae     2  406366.8118 0.67466702 99903.9636 1.652927e+06\n13       EB  grandis     2      53.8692 0.18065529    36.9981 7.843360e+01\n14       PC  grandis     2      51.0033 0.15952964    36.6030 7.106900e+01\n15 SERENADE  grandis     2     473.0914 0.04998741   426.3813 5.249185e+02\n16  DACONIL  grandis     2     116.9284 0.10952859    93.1103 1.468394e+02\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nec50_plot = ec50_out %>%\n  mutate(ID = case_when(ID == \"EB\" ~ \"CE\",\n                   ID == \"PC\" ~ \"CP\",\n                   ID == \"DACONIL\" ~ \"Fungicide\",\n                   ID == \"SERENADE\" ~ \"QST713\"),\n         specie = case_when(specie == \"linariae\" ~ \"A3 - A. linariae\",\n                            specie == \"grandis\" ~ \"As248P - A. linariae\"),\n         trial = case_when(trial==\"1\" ~\"First trial\",\n                           trial == \"2\" ~ \"Second trial\")) %>% \n  \n  \n  ggplot(aes(ID,Estimate, color = specie)) +\n  geom_point(size = 2, \n             position = position_dodge(width = 0.4))+\n  geom_errorbar(aes(ymin=Lower, ymax = Upper),\n                width = 0, \n                size =1, \n             position = position_dodge(width = 0.4))+\n  scale_y_log10()+\n  lemon::facet_rep_grid(trial~.)+\n  labs(y = expression(\"EC\"[50]~\" μg/mL\"),\n       x = \"\", color = \"\")+\n  scale_color_colorblind()+\n  theme_half_open(font_size = 10)+\n  theme(legend.text = element_text(face = \"italic\"),\n        panel.spacing = unit(1, \"lines\"),\n        strip.background = element_blank()\n        # panel.border = element_rect(color = \"gray\")\n        )\nec50_plot   \n```\n\n::: {.cell-output-display}\n![](fungal_sensibility_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n\n```{.r .cell-code}\n  # ggsave(\"figs/ec50.png\", dpi = 600, height =3,width = 6)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nestimate_EC502 = function (formula, data, EC_lvl = 50, isolate_col, strata_col = NULL, \n    fct, interval = c(\"none\", \"delta\", \"fls\", \n        \"tfls\")) \n{\n    {\n        if (missing(formula)) {\n            stop(gettextf(\"Please, specify the 'formula'\"))\n        }\n    }\n    {\n        if (missing(data)) {\n            stop(gettextf(\"Missing 'data'\"))\n        }\n    }\n    {\n        if (missing(isolate_col)) {\n            stop(gettextf(\"Missing 'isolate_col'\"))\n        }\n    }\n    {\n        if (missing(fct)) {\n            stop(gettextf(\"Please, specify the 'fct'\"))\n        }\n    }\n    box = data.frame()\n    box_coef = data.frame()\n    if (is.null(strata_col)) {\n        data_uni = data %>% dplyr::mutate(strata = \"\")\n        strata_col = \"strata\"\n    }\n    else {\n        data_uni = data %>% tidyr::unite(strata, strata_col, \n            sep = \"---\")\n    }\n    STRATA = data_uni[[\"strata\"]]\n    strata = as.character(unique(STRATA))\n    for (i in 1:length(strata)) {\n        rowi = data_uni[[\"strata\"]] == strata[i]\n        datai = data_uni[rowi, ]\n        ID = datai[[isolate_col]]\n        id = as.character(unique(ID))\n        for (k in 1:length(id)) {\n            rowk = datai[[isolate_col]] == id[k]\n            datak = datai[rowk, ]\n            try({\n                model = drc::drm(formula, fct = fct, data = datak)\n                ed = drc::ED(model, EC_lvl, interval = interval, display = F)\n                lil_box = data.frame(ID = as.character(id[k]), \n                                    strata = as.character(strata[i]), ed) %>%\n                  tibble::remove_rownames() %>% \n                  dplyr::mutate(strata = as.character(strata), \n                                ID = as.character(ID)) %>%\n                  tidyr::separate(strata, \n                  into = strata_col, sep = \"---\")\n                box = box %>% dplyr::bind_rows(lil_box)\n                \n            aa1 = model$coefficients\n            lil_box_coef = as.data.frame(aa1) %>%\n              tibble::rownames_to_column(\"par\") %>%\n              dplyr::mutate(value = aa1) %>% \n              dplyr::select(-aa1) %>% \n              tidyr::pivot_wider(names_from =par,\n                                 values_from = value) #%>% \n              # dplyr::mutate(strata = as.character(strata), \n              #                   ID = as.character(ID)) %>%\n              # tidyr::separate(strata,into = strata_col, sep = \"---\")   \n                \n             box_coef = box_coef %>% dplyr::bind_rows(lil_box_coef)   \n                \n                \n            }, silent = T)\n        }\n    }\n    computed_isolates = unique(box$ID)\n    all_isolates = as.character(unique(data[[isolate_col]]))\n    true_false = !all_isolates %in% computed_isolates\n    did_not = all_isolates[true_false]\n    if (length(did_not) > 0) {\n        print(paste0(\"Isolates = c(\", toString(paste0(\"'\", \n            did_not, \"'\")), \") did not produced ec50 estimates due to error during fitting procedure\", \n            collapse = \", \"))\n    }\n    \n    \n\n    return(bind_cols(box, box_coef))\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\naa1 = model$coefficients\nas.data.frame(aa1) %>% \n  tibble::rownames_to_column(\"par\") %>% \n  dplyr::mutate(value = aa1) %>% \n  dplyr::select(-aa1) %>% \n  tidyr::pivot_wider(names_from =par,\n              values_from = value)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 4\n  `b:(Intercept)` `c:(Intercept)` `d:(Intercept)` `e:(Intercept)`\n            <dbl>           <dbl>           <dbl>           <dbl>\n1           0.211           -18.3            32.8           1025.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf1_1 = df1 %>% \n  mutate(trans = as.numeric(trans))%>%\nmutate(m_col = (long+trans)/2, \n       trial = as.character(trial))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nEC50_out2 = estimate_EC502(formula = m_col1~conc,\n              data = df4,\n              isolate_col = \"trat\",\n              strata_col = c(\"specie\", \"trial\"),\n              fct = LL2.3() ,\n              interval = \"delta\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nNote: Using an external vector in selections is ambiguous.\nℹ Use `all_of(strata_col)` instead of `strata_col` to silence this message.\nℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.\nThis message is displayed once per session.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_ll2.3 = function(b,d,e,x)  0+(d-0)/(1+exp(b*(log(x)-log(e))))\n```\n:::\n\n\n<!-- $0 + \\frac{d-0}{1+\\exp(b(\\log(x)-\\log(e)))}$ -->\n\n\n::: {.cell}\n\n```{.r .cell-code}\nEC50_out2_plot = EC50_out2 %>% \n  rename(trat = \"ID\") %>% \n  full_join(df1_1) %>% \n  unite(cols, trat, specie,trial, sep =\"_\",remove = FALSE) %>% \n  filter(conc>0) %>% \n  mutate(trat = case_when(trat == \"EB\" ~ \"CE\",\n                   trat == \"PC\" ~ \"CP\",\n                   trat == \"DACONIL\" ~ \"Fungicide\",\n                   trat == \"SERENADE\" ~ \"QST713\"),\n         specie = case_when(specie == \"linariae\" ~ \"A3 - A. linariae\",\n                            specie == \"grandis\" ~ \"As248P - A. linariae\"),\n         trial = case_when(trial==\"1\" ~\"First trial\",\n                           trial == \"2\" ~ \"Second trial\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nJoining, by = c(\"trat\", \"specie\", \"trial\")\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncolls = unique(EC50_out2_plot$cols)\nbase = ggplot()\nfor(i in 1:length(colls)){\n\n dat_filt = EC50_out2_plot %>% \n    filter(cols == colls[i])\n  \n  \nb = unique(dat_filt$`b:(Intercept)`)\nd = unique(dat_filt$`d:(Intercept)`)\ne = exp(unique(dat_filt$`e:(Intercept)`))\n  \nbase = base +\n  geom_point(data =dat_filt, aes(conc,m_col, color = trat))+\n  scale_x_log10()+\n  geom_line(data =dat_filt,\n            stat = \"function\",\n            fun = model_ll2.3,\n            aes(x = conc, color =trat),\n            args = list(b = b,\n                        d = d,\n                        e = e),\n            size =1)+\n  lemon::facet_rep_grid(trial~specie)+\n  theme_half_open(font_size = 10)+\n  scale_color_calc()+\n  theme(strip.text.x = element_text(face = \"italic\"),\n        strip.background = element_blank(),\n        panel.spacing = unit(1, \"lines\"),\n        # panel.border = element_rect(color = \"gray\")\n        )+\n  labs(x = \"Concentrations (μg/mL)\",\n       y = \"Mycelial growth (mm)\",\n       color = \"\")\n\n}\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nScale for 'x' is already present. Adding another scale for 'x', which will\nreplace the existing scale.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nScale for 'colour' is already present. Adding another scale for 'colour',\nwhich will replace the existing scale.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nScale for 'x' is already present. Adding another scale for 'x', which will\nreplace the existing scale.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nScale for 'colour' is already present. Adding another scale for 'colour',\nwhich will replace the existing scale.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nScale for 'x' is already present. Adding another scale for 'x', which will\nreplace the existing scale.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nScale for 'colour' is already present. Adding another scale for 'colour',\nwhich will replace the existing scale.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nScale for 'x' is already present. Adding another scale for 'x', which will\nreplace the existing scale.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nScale for 'colour' is already present. Adding another scale for 'colour',\nwhich will replace the existing scale.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nScale for 'x' is already present. Adding another scale for 'x', which will\nreplace the existing scale.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nScale for 'colour' is already present. Adding another scale for 'colour',\nwhich will replace the existing scale.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nScale for 'x' is already present. Adding another scale for 'x', which will\nreplace the existing scale.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nScale for 'colour' is already present. Adding another scale for 'colour',\nwhich will replace the existing scale.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nScale for 'x' is already present. Adding another scale for 'x', which will\nreplace the existing scale.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nScale for 'colour' is already present. Adding another scale for 'colour',\nwhich will replace the existing scale.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nScale for 'x' is already present. Adding another scale for 'x', which will\nreplace the existing scale.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nScale for 'colour' is already present. Adding another scale for 'colour',\nwhich will replace the existing scale.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nScale for 'x' is already present. Adding another scale for 'x', which will\nreplace the existing scale.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nScale for 'colour' is already present. Adding another scale for 'colour',\nwhich will replace the existing scale.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nScale for 'x' is already present. Adding another scale for 'x', which will\nreplace the existing scale.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nScale for 'colour' is already present. Adding another scale for 'colour',\nwhich will replace the existing scale.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nScale for 'x' is already present. Adding another scale for 'x', which will\nreplace the existing scale.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nScale for 'colour' is already present. Adding another scale for 'colour',\nwhich will replace the existing scale.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nScale for 'x' is already present. Adding another scale for 'x', which will\nreplace the existing scale.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nScale for 'colour' is already present. Adding another scale for 'colour',\nwhich will replace the existing scale.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nScale for 'x' is already present. Adding another scale for 'x', which will\nreplace the existing scale.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nScale for 'colour' is already present. Adding another scale for 'colour',\nwhich will replace the existing scale.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nScale for 'x' is already present. Adding another scale for 'x', which will\nreplace the existing scale.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nScale for 'colour' is already present. Adding another scale for 'colour',\nwhich will replace the existing scale.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nScale for 'x' is already present. Adding another scale for 'x', which will\nreplace the existing scale.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nScale for 'colour' is already present. Adding another scale for 'colour',\nwhich will replace the existing scale.\n```\n:::\n\n```{.r .cell-code}\nbase\n```\n\n::: {.cell-output-display}\n![](fungal_sensibility_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbase +ec50_plot+\n  plot_layout(widths = c(2, 1))+\n  plot_annotation(tag_levels = \"A\")&\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](fungal_sensibility_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggsave(\".figs/curves_ec50.png\", dpi = 600, height = 5.5, width = 8.5)\n```\n:::\n",
    "supporting": [
      "fungal_sensibility_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}