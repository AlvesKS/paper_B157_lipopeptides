{"title":"Fungal sensibility","markdown":{"yaml":{"title":"Fungal sensibility"},"headingText":"Pacotes","containsRefs":false,"markdown":"\n\n\n```{r}\nlibrary(tidyverse)\nlibrary(drc)\nlibrary(ec50estimator)\nlibrary(cowplot)\nlibrary(ggthemes)\nlibrary(ggridges)\nlibrary(gsheet)\nlibrary(patchwork)\n```\n\n# Carregar dados\n\n```{r}\ndf1 = gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1XGLpSlJZayIVSVxWTsyDJXpO4c65JOeMOyMAW18EVqY/edit?usp=sharing\")\ndf1\n```\n\n```{r}\ndf2 = df1 %>% \n  mutate(trans = as.numeric(trans))%>%\nmutate(m_col = (long+trans)/2)%>%\n  filter(specie == \"linariae\", trat == \"EB\")\ndf2\n # ggplot(aes(as.factor(conc), m_col, fill=trat))+\n#geom_point()\n  #facet_wrap(~specie)\n```\n\n```{r}\ndf2 %>% \n  ggplot(aes(as.factor(conc), m_col, fill=trat))+\ngeom_point()\n```\n\n```{r}\nmodel = drm(m_col ~ conc, data = df2, fct = W1.4())\nsummary(model)\nplot(model)\n```\n\n```{r}\n# getmeanfunction()\n```\n\n```{r}\nED(model, respLev = 50, interval = \"delta\")\nmselect(model, fctList = list(LL.4(),LL2.4(), LL.3(), LL.3u(), LL.2(), LL.5(), W1.3(), W1.4(), W1.2(), W2.2(), W2.3(), W2.4()))\n```\n\n# Análise para os dois isolados\n\n```{r}\ndf3 = df1 %>% \n  mutate(trans = as.numeric(trans))%>%\n  mutate(m_col1 = (long+trans)/2) %>% \n  filter(trial == \"1\", \n         trat == \"EB\")\n   df3\n```\n\n```{r}\ndf3 %>% \n  ggplot(aes(as.factor(conc), m_col1, color=specie))+\ngeom_point()\n```\n\n```{r}\nmodel2 = drm(m_col1 ~ conc, curveid = specie, data = df3, fct = LL.3())\nsummary(model2)\nplot(model2)\n```\n\n```{r}\nmselect(model2, fctList = list(LL.4(),LL2.4(), LL.3(), LL.3u(), LL.2(), LL.5(), W1.3(), W1.4(), W1.2(), W2.2(), W2.3(), W2.4()))\n```\n\n```{r}\nED(model2, respLev=50)\n```\n\n# EC50 (Trial 1)\n\n```{r}\ndf4 = df1 %>% \n  mutate(trans = as.numeric(trans))%>%\n  mutate(m_col1 = (long+trans)/2) #%>% \n   # filter(trial == \"1\")\n```\n\n```{r}\nec50_out = estimate_EC50(formula = m_col1~conc,\n              data = df4,\n              isolate_col = \"trat\",\n              strata_col = c(\"specie\", \"trial\"),\n              fct = LL2.3() ,\n              interval = \"delta\") %>% \n  mutate(Estimate = round(exp(Estimate),4),\n         Lower = round(exp(Lower),4),\n         Upper = round(exp(Upper),4))\n\nec50_out\n```\n\n```{r}\nec50_plot = ec50_out %>%\n  mutate(ID = case_when(ID == \"EB\" ~ \"CE\",\n                   ID == \"PC\" ~ \"CP\",\n                   ID == \"DACONIL\" ~ \"Fungicide\",\n                   ID == \"SERENADE\" ~ \"QST713\"),\n         specie = case_when(specie == \"linariae\" ~ \"A3 - A. linariae\",\n                            specie == \"grandis\" ~ \"As248P - A. linariae\"),\n         trial = case_when(trial==\"1\" ~\"First trial\",\n                           trial == \"2\" ~ \"Second trial\")) %>% \n  \n  \n  ggplot(aes(ID,Estimate, color = specie)) +\n  geom_point(size = 2, \n             position = position_dodge(width = 0.4))+\n  geom_errorbar(aes(ymin=Lower, ymax = Upper),\n                width = 0, \n                size =1, \n             position = position_dodge(width = 0.4))+\n  scale_y_log10()+\n  lemon::facet_rep_grid(trial~.)+\n  labs(y = expression(\"EC\"[50]~\" μg/mL\"),\n       x = \"\", color = \"\")+\n  scale_color_colorblind()+\n  theme_half_open(font_size = 10)+\n  theme(legend.text = element_text(face = \"italic\"),\n        panel.spacing = unit(1, \"lines\"),\n        strip.background = element_blank()\n        # panel.border = element_rect(color = \"gray\")\n        )\nec50_plot   \n  # ggsave(\"figs/ec50.png\", dpi = 600, height =3,width = 6)\n\n```\n\n```{r}\nestimate_EC502 = function (formula, data, EC_lvl = 50, isolate_col, strata_col = NULL, \n    fct, interval = c(\"none\", \"delta\", \"fls\", \n        \"tfls\")) \n{\n    {\n        if (missing(formula)) {\n            stop(gettextf(\"Please, specify the 'formula'\"))\n        }\n    }\n    {\n        if (missing(data)) {\n            stop(gettextf(\"Missing 'data'\"))\n        }\n    }\n    {\n        if (missing(isolate_col)) {\n            stop(gettextf(\"Missing 'isolate_col'\"))\n        }\n    }\n    {\n        if (missing(fct)) {\n            stop(gettextf(\"Please, specify the 'fct'\"))\n        }\n    }\n    box = data.frame()\n    box_coef = data.frame()\n    if (is.null(strata_col)) {\n        data_uni = data %>% dplyr::mutate(strata = \"\")\n        strata_col = \"strata\"\n    }\n    else {\n        data_uni = data %>% tidyr::unite(strata, strata_col, \n            sep = \"---\")\n    }\n    STRATA = data_uni[[\"strata\"]]\n    strata = as.character(unique(STRATA))\n    for (i in 1:length(strata)) {\n        rowi = data_uni[[\"strata\"]] == strata[i]\n        datai = data_uni[rowi, ]\n        ID = datai[[isolate_col]]\n        id = as.character(unique(ID))\n        for (k in 1:length(id)) {\n            rowk = datai[[isolate_col]] == id[k]\n            datak = datai[rowk, ]\n            try({\n                model = drc::drm(formula, fct = fct, data = datak)\n                ed = drc::ED(model, EC_lvl, interval = interval, display = F)\n                lil_box = data.frame(ID = as.character(id[k]), \n                                    strata = as.character(strata[i]), ed) %>%\n                  tibble::remove_rownames() %>% \n                  dplyr::mutate(strata = as.character(strata), \n                                ID = as.character(ID)) %>%\n                  tidyr::separate(strata, \n                  into = strata_col, sep = \"---\")\n                box = box %>% dplyr::bind_rows(lil_box)\n                \n            aa1 = model$coefficients\n            lil_box_coef = as.data.frame(aa1) %>%\n              tibble::rownames_to_column(\"par\") %>%\n              dplyr::mutate(value = aa1) %>% \n              dplyr::select(-aa1) %>% \n              tidyr::pivot_wider(names_from =par,\n                                 values_from = value) #%>% \n              # dplyr::mutate(strata = as.character(strata), \n              #                   ID = as.character(ID)) %>%\n              # tidyr::separate(strata,into = strata_col, sep = \"---\")   \n                \n             box_coef = box_coef %>% dplyr::bind_rows(lil_box_coef)   \n                \n                \n            }, silent = T)\n        }\n    }\n    computed_isolates = unique(box$ID)\n    all_isolates = as.character(unique(data[[isolate_col]]))\n    true_false = !all_isolates %in% computed_isolates\n    did_not = all_isolates[true_false]\n    if (length(did_not) > 0) {\n        print(paste0(\"Isolates = c(\", toString(paste0(\"'\", \n            did_not, \"'\")), \") did not produced ec50 estimates due to error during fitting procedure\", \n            collapse = \", \"))\n    }\n    \n    \n\n    return(bind_cols(box, box_coef))\n}\n```\n\n```{r}\naa1 = model$coefficients\nas.data.frame(aa1) %>% \n  tibble::rownames_to_column(\"par\") %>% \n  dplyr::mutate(value = aa1) %>% \n  dplyr::select(-aa1) %>% \n  tidyr::pivot_wider(names_from =par,\n              values_from = value)\n```\n\n```{r}\ndf1_1 = df1 %>% \n  mutate(trans = as.numeric(trans))%>%\nmutate(m_col = (long+trans)/2, \n       trial = as.character(trial))\n```\n\n```{r}\nEC50_out2 = estimate_EC502(formula = m_col1~conc,\n              data = df4,\n              isolate_col = \"trat\",\n              strata_col = c(\"specie\", \"trial\"),\n              fct = LL2.3() ,\n              interval = \"delta\")\n```\n\n```{r}\nmodel_ll2.3 = function(b,d,e,x)  0+(d-0)/(1+exp(b*(log(x)-log(e))))\n\n```\n\n<!-- $0 + \\frac{d-0}{1+\\exp(b(\\log(x)-\\log(e)))}$ -->\n\n```{r}\nEC50_out2_plot = EC50_out2 %>% \n  rename(trat = \"ID\") %>% \n  full_join(df1_1) %>% \n  unite(cols, trat, specie,trial, sep =\"_\",remove = FALSE) %>% \n  filter(conc>0) %>% \n  mutate(trat = case_when(trat == \"EB\" ~ \"CE\",\n                   trat == \"PC\" ~ \"CP\",\n                   trat == \"DACONIL\" ~ \"Fungicide\",\n                   trat == \"SERENADE\" ~ \"QST713\"),\n         specie = case_when(specie == \"linariae\" ~ \"A3 - A. linariae\",\n                            specie == \"grandis\" ~ \"As248P - A. linariae\"),\n         trial = case_when(trial==\"1\" ~\"First trial\",\n                           trial == \"2\" ~ \"Second trial\"))\n```\n\n```{r}\ncolls = unique(EC50_out2_plot$cols)\nbase = ggplot()\nfor(i in 1:length(colls)){\n\n dat_filt = EC50_out2_plot %>% \n    filter(cols == colls[i])\n  \n  \nb = unique(dat_filt$`b:(Intercept)`)\nd = unique(dat_filt$`d:(Intercept)`)\ne = exp(unique(dat_filt$`e:(Intercept)`))\n  \nbase = base +\n  geom_point(data =dat_filt, aes(conc,m_col, color = trat))+\n  scale_x_log10()+\n  geom_line(data =dat_filt,\n            stat = \"function\",\n            fun = model_ll2.3,\n            aes(x = conc, color =trat),\n            args = list(b = b,\n                        d = d,\n                        e = e),\n            size =1)+\n  lemon::facet_rep_grid(trial~specie)+\n  theme_half_open(font_size = 10)+\n  scale_color_calc()+\n  theme(strip.text.x = element_text(face = \"italic\"),\n        strip.background = element_blank(),\n        panel.spacing = unit(1, \"lines\"),\n        # panel.border = element_rect(color = \"gray\")\n        )+\n  labs(x = \"Concentrations (μg/mL)\",\n       y = \"Mycelial growth (mm)\",\n       color = \"\")\n\n}\nbase\n\n```\n\n```{r}\nbase +ec50_plot+\n  plot_layout(widths = c(2, 1))+\n  plot_annotation(tag_levels = \"A\")&\n  theme(legend.position = \"bottom\")\n\nggsave(\".figs/curves_ec50.png\", dpi = 600, height = 5.5, width = 8.5)\n```\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","self-contained":false,"css":["styles.css"],"toc":true,"output-file":"fungal_sensibility.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.2.253","theme":{"light":"flatly","dark":"darkly"},"smooth-scroll":true,"title":"Fungal sensibility"},"extensions":{"book":{"multiFile":true}}}}}